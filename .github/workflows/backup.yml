name: Supabase Full Backup with CLI Tunnel

on:
  schedule:
    - cron: '0 2 * * *'  # tÃ¤glich 2:00 UTC
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_PROJECT_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download supabase CLI binary
        run: |
          curl -L https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz -o supabase.tar.gz
          tar -xzf supabase.tar.gz
          chmod +x supabase
          sudo mv supabase /usr/local/bin/supabase

      - name: Extract project ref
        run: |
          PROJECT_REF=$(echo $SUPABASE_URL | sed -E 's|https://([^.]+)\.supabase\.co|\1|')
          echo "PROJECT_REF=$PROJECT_REF" >> $GITHUB_ENV

      - name: Start Supabase DB Tunnel in background
        run: |
          supabase db tunnel --project-ref $PROJECT_REF --token $SUPABASE_KEY > tunnel.log 2>&1 &
          echo $! > supabase_tunnel.pid
          sleep 10
          echo "--- Tunnel Log ---"
          cat tunnel.log

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Backup database via tunnel
        run: |
          export PGPASSWORD=$SUPABASE_KEY
          pg_dump -h localhost -p 6543 -U postgres -d postgres --format=tar --file=backup_$(date +%Y%m%d_%H%M%S).tar

      - name: Commit and push backup file
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add backup_*.tar
          git commit -m "Automated DB backup $(date)" || echo "No changes to commit"
          git push

      - name: Kill Supabase Tunnel
        run: |
          kill $(cat supabase_tunnel.pid) || true
